{"version":3,"sources":["App.js","dataUtil.js","components/MenuFiltersItems/FilterSelect.jsx","components/MenuFiltersItems/FilterSlide.jsx","components/MenuFilters.jsx","components/MenuCharts.jsx","components/Charts/WinnersByCountry.jsx","components/Charts/WinnersByRadio.jsx","components/Charts/WinnersByCategory.jsx","components/Charts/WinnersByYear.jsx","components/Charts/WinnersByTable.jsx","components/NobelCharts.jsx","components/NobelApp.jsx","index.js"],"names":["LineChart","Line","CartesianGrid","XAxis","YAxis","Tooltip","COLOR_PALETTE","ChartDataUtil","constructor","data","this","_data","_initOptions","_initFilters","filterData","options","_options","filters","_filters","filteredData","_filteredData","prototype","countries","Array","from","d3","d","country","keys","sort","categories","category","years","year","a","b","genders","console","log","len","length","gender","v","d1","d2","slice","map","concat","_buildChartData","winnersByCountry","maxWinners","sumWinners","k","countryNum","filter","find","item","toLowerCase","getNumByCountry","i","number","countryId","_","require","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","FilterSelect","label","defaultOptions","onSetFilter","sx","selectedOptions","setSelectedOptions","useState","labelId","selectId","setCtrlId","uniqueId","FormControl","border","InputLabel","id","Select","multiple","value","onChange","event","target","newValue","split","classes","select","fontSize","margin","color","input","OutlinedInput","renderValue","selected","join","fontWeight","option","MenuItem","Checkbox","checked","includes","ListItemText","primary","FilterSlide","props","range","min","max","setValue","Paper","elevation","textAlign","pt","px","Slider","defaultValue","onChangeCommitted","valueLabelDisplay","step","marks","disableSwap","mt","MenuFilters","commonConfig","maxWidth","arrLenOfYear","Grid","container","direction","columnSpacing","rowSpacing","justifyContent","alignItems","wrap","xs","sm","md","lg","xl","React","chartList","text","MenuCharts","selection","onSetSelection","marginTop","ToggleButtonGroup","exclusive","newSelection","textTransform","flexWrap","index","ToggleButton","margins","top","right","bottom","left","WinnersByCountry","xDataKey","xDataType","barDataKey","barDataType","beginYear","endYear","minWidth","ResponsiveContainer","height","BarChart","dataKey","tick","CustomizedAxisTick","tickLine","axisLine","allowDataOverflow","interval","hide","content","CustomTooltip","Legend","align","verticalAlign","wrapperStyle","paddingTop","Bar","name","fill","LabelList","position","entry","Cell","x","y","payload","transform","dx","dy","textAnchor","active","Math","PI","WinnersByRadio","filterDataByRadio","minHeight","PieChart","Pie","cx","cy","outerRadius","renderCustomizedLabel","contentStyle","backgroundColor","borderRadius","paddingBottom","paddingLeft","paddingRight","allowEscapeViewBox","CustomLegend","midAngle","innerRadius","percent","dominantBaseline","toFixed","radio","minRadio","sum","reduce","forEach","getRadioByCountry","totalNum","acc","c","othersRadio","totalFilteredNum","push","mark","horPaddings","vertPaddings","WinnersByCategory","dataPerYear","sortedData","yearNum","buildData","chartHeight","xAxisWidth","overflow","ScatterChart","strokeDasharray","allowDuplicatedCategory","type","domain","tickCount","angle","minTickGap","tickMargin","padding","verticalAnchor","stroke","ZAxis","layout","cursor","categoryData","Scatter","shape","legendType","memo","WinnersByYear","o","obj","Object","fromEntries","hasOwnProperty","AreaChart","iconType","Area","stackId","WinnersByTable","rows","columns","entries","field","headerName","fluid","renderCell","params","lineHeight","href","row","toString","components","Toolbar","GridToolbar","NobelCharts","selectedChart","scatterData","useMemo","buildScatter","barchartData","buildBarchartAndPieChart","areachartData","buildAreaChart","tablechartData","buildTableChart","NobelApp","isDataLoaded","setData","chart","setChart","useEffect","async","url","fetch","then","response","ok","Error","statusText","catch","error","fetchData","rawData","handleFilterChange","useCallback","clone","handleMenuCharts","newChart","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.41ae249a.chunk.js","sourcesContent":["import {\n  CartesianGrid,\n  Line,\n  LineChart,\n  Tooltip,\n  XAxis,\n  YAxis\n} from \"recharts\";\nimport \"./styles.css\";\n// import { LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\nconst data = [{ name: \"Page A\", uv: 400, pv: 2400, amt: 2400 }];\n\nconst renderLineChart = (\n  <LineChart width={600} height={300} data={data}>\n    <Line\n      type=\"monotone\"\n      dataKey=\"pv\"\n      stroke=\"#8884d8\"\n      margin={{ top: 50, right: 20, bottom: 5, left: 200 }}\n    />\n    <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"10 5\" />\n    <XAxis dataKey=\"name\" />\n    <YAxis />\n    <Tooltip />\n  </LineChart>\n);\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>Nobel Prize All In One</h1>\n      {/* {renderLineChart} */}\n    </div>\n  );\n}\n","import * as d3 from \"d3\";\r\n\r\nexport const COLOR_PALETTE = [\r\n  \"#0cc0aa\",\r\n  \"#4787c9\",\r\n  \"#fb0998\",\r\n  \"#59a20c\",\r\n  \"#7c08c5\",\r\n  \"#e0c645\",\r\n  \"#715cb6\",\r\n  \"#ef972d\",\r\n  \"#a57a6a\",\r\n  \"#c6c0fe\",\r\n  \"#ec9bfa\",\r\n  \"#421674\",\r\n  \"#b3e467\",\r\n  \"#5c190c\",\r\n  \"#55f17b\",\r\n  \"#c25357\",\r\n  \"#b9dcca\",\r\n  \"#29403b\",\r\n  \"#f4b8ab\",\r\n  \"#6a8b7b\",\r\n];\r\n\r\nexport async function fetchData(url) {\r\n  console.log(\"URL:\", url);\r\n  const data = await fetch(url)\r\n    .then((response) => {\r\n      if (!response.ok) throw new Error(response.statusText);\r\n      return response.text();\r\n    })\r\n    .catch((error) => {\r\n      throw error;\r\n    });\r\n  console.log(\"Data fetch complete!\");\r\n  return data;\r\n  // try {\r\n  //   let response = await fetch(url);\r\n  //   if (!response.ok) {\r\n  //     throw new Error(response.statusText);\r\n  //   }\r\n  //   let text = await response.text();\r\n  //   // console.log(text);\r\n  //   return text;\r\n  // } catch (error) {\r\n  //   console.log(\"handleError:\", error);\r\n  //   throw error;\r\n  // }\r\n}\r\n\r\nexport class ChartDataUtil {\r\n  constructor(data) {\r\n    this._data = data;\r\n    this._initOptions();\r\n    this._initFilters();\r\n    this.filterData();\r\n  }\r\n\r\n  get options() {\r\n    return this._options;\r\n  }\r\n\r\n  get filters() {\r\n    return this._filters;\r\n  }\r\n\r\n  get filteredData() {\r\n    return this._filteredData;\r\n  }\r\n}\r\n\r\nChartDataUtil.prototype._initOptions = function () {\r\n  this._options = {};\r\n  this._options.countries = Array.from(\r\n    d3.group(this._data, (d) => d.country).keys()\r\n  ).sort();\r\n  this._options.categories = Array.from(\r\n    d3.group(this._data, (d) => d.category).keys()\r\n  );\r\n  this._options.years = Array.from(\r\n    d3.group(this._data, (d) => d.year).keys()\r\n  ).sort((a, b) => a - b);\r\n  this._options.genders = [\"Male\", \"Female\"];\r\n};\r\n\r\nChartDataUtil.prototype._initFilters = function () {\r\n  console.log(\"I start to init options\");\r\n  console.log(\"this.options:\", this._options);\r\n  const len = this._options.years.length - 1;\r\n  this._filters = {};\r\n  this._filters.category = [...this._options.categories];\r\n  this._filters.gender = [...this._options.genders];\r\n  this._filters.country = d3\r\n    .rollups(\r\n      this._data,\r\n      (v) => v.length,\r\n      (d) => d.country\r\n    )\r\n    .sort((d1, d2) => d3.descending(d1[1], d2[1]))\r\n    .slice(0, 10)\r\n    .map((d) => d[0])\r\n    .concat([\"China\", \"India\"]);\r\n  this._filters.year = [this._options.years[0], this._options.years[len]];\r\n};\r\n\r\nChartDataUtil.prototype._buildChartData = function () {\r\n  this._filteredData.winnersByCountry = d3\r\n    .flatRollup(\r\n      this._filteredData,\r\n      (v) => v.length,\r\n      (d) => d.country\r\n    )\r\n    .sort((a, b) => d3.descending(a[1], b[1]));\r\n\r\n  this._filteredData.maxWinners = this._filteredData.winnersByCountry[0];\r\n  this._filteredData.sumWinners = d3.sum(\r\n    this._filteredData.winnersByCountry,\r\n    ([k, v]) => v\r\n  );\r\n  this._filteredData.countryNum = this._filteredData.winnersByCountry.length;\r\n  this._filteredData.year = this._filters.year;\r\n  this._filteredData.categories = this._filters.category;\r\n};\r\n\r\nChartDataUtil.prototype.filterData = function (filters = null) {\r\n  if (filters) this._filters = filters;\r\n  console.log(\"Before filter, filters:\", filters);\r\n  console.log(\"Before filter, data:\", this);\r\n  this._filteredData = this._data.filter(\r\n    (d) =>\r\n      d.year >= this._filters.year[0] &&\r\n      d.year <= this._filters.year[1] &&\r\n      this._filters.country.find(\r\n        (item) => item.toLowerCase() == d.country.toLowerCase()\r\n      ) &&\r\n      this._filters.category.find(\r\n        (item) => item.toLowerCase() == d.category.toLowerCase()\r\n      ) &&\r\n      this._filters.gender.find(\r\n        (item) => item.toLowerCase() == d.gender.toLowerCase()\r\n      )\r\n  );\r\n\r\n  this._buildChartData();\r\n  console.log(\"After filter, data:\", this);\r\n  return this;\r\n};\r\n\r\nexport const getNumByCountry = (filter) => {\r\n  return filter.winnersByCountry.map((d, i) => ({\r\n    country: d[0],\r\n    number: d[1],\r\n    countryId: i + 1,\r\n  }));\r\n};\r\n\r\nexport const getRadioByCountry = (data) => {\r\n  let sum = data.reduce((sum, d) => sum + d.number, 0);\r\n  data.forEach((d) => {\r\n    d.radio = (d.number * 100) / sum;\r\n    // d.radio = `${((d.number * 100) / sum).toFixed(0)}%`;\r\n  });\r\n  return data;\r\n};\r\n","import { useState } from \"react\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Select from \"@mui/material/Select\";\nimport Checkbox from \"@mui/material/Checkbox\";\n\nconst _ = require(\"lodash\");\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nexport const FilterSelect = ({\n  data,\n  label,\n  options,\n  defaultOptions,\n  onSetFilter,\n  sx,\n}) => {\n  console.log(\"label:\", label);\n  const [selectedOptions, setSelectedOptions] = useState(defaultOptions);\n  const [[labelId, selectId], setCtrlId] = useState([\n    _.uniqueId(label + \"_id_\"),\n    _.uniqueId(label + \"_select_\"),\n  ]);\n\n  const handleChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    const newValue = typeof value === \"string\" ? value.split(\",\") : value;\n    setSelectedOptions(\n      // On autofill we get a the stringified value.\n      newValue\n    );\n    console.log(\"new filter:\", {\n      ...data.filters,\n      [label.toLowerCase()]: newValue,\n    });\n    onSetFilter({ ...data.filters, [label.toLowerCase()]: newValue });\n  };\n  return (\n    <>\n      <FormControl sx={{ ...sx, border: \"2px solid green\" }}>\n        <InputLabel id={labelId}>{label}</InputLabel>\n        <Select\n          labelId={labelId}\n          id={selectId}\n          multiple\n          value={selectedOptions}\n          onChange={handleChange}\n          classes={{\n            select: {\n              fontSize: \"small\",\n              margin: \"100px 200px\",\n              border: \"4px solid cyan\",\n              color: \"green\",\n            },\n          }}\n          input={<OutlinedInput label={label} />}\n          renderValue={(selected) => selected.join(\", \")}\n          MenuProps={MenuProps}\n          sx={{ fontSize: \"small\", fontWeight: 900 }}\n        >\n          {options.map((option) => (\n            <MenuItem\n              key={option}\n              value={option}\n              sx={{ fontSize: \"small\", border: \"2px solid green\" }}\n            >\n              <Checkbox checked={selectedOptions.includes(option)} />\n              <ListItemText primary={option} />\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </>\n  );\n};\n","import { Paper, Slider } from \"@mui/material\";\nimport { useState } from \"react\";\n\nexport function FilterSlide(props) {\n  const { range, onSetFilter, data, min, max } = props;\n  const [value, setValue] = useState(range);\n  const handleSliderChange = (event, newValue) => {\n    console.log(\"On Slider Change:\", newValue);\n    setValue(newValue);\n  };\n  const handleSliderCommitChange = (event, newValue) => {\n    console.log(\"On Slider Commit Change:\", newValue);\n    onSetFilter({ ...data.filters, year: newValue });\n  };\n\n  return (\n    <Paper\n      elevation={10}\n      sx={{\n        border: \"2px solid green\",\n        textAlign: \"center\",\n        pt: 2,\n        px: 3,\n      }}\n    >\n      <Slider\n        defaultValue={range}\n        value={value}\n        onChange={handleSliderChange}\n        onChangeCommitted={handleSliderCommitChange}\n        valueLabelDisplay=\"on\"\n        min={min}\n        max={max}\n        step={1}\n        marks\n        disableSwap\n        sx={{ border: \"2px solid yellow\", mt: 0 }}\n      ></Slider>\n    </Paper>\n  );\n}\n","import { Grid } from \"@mui/material\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { FilterSelect } from \"./MenuFiltersItems/FilterSelect\";\nimport { FilterSlide } from \"./MenuFiltersItems/FilterSlide\";\n\nconst MenuFilters = ({ data, onSetFilter }) => {\n  console.log(\"Menu rendering\");\n  const commonConfig = {\n    data,\n    onSetFilter,\n    sx: { width: \"100%\", maxWidth: \"100%\" },\n  };\n  const arrLenOfYear = data.options.years.length - 1;\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      columnSpacing={2}\n      rowSpacing={1}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      wrap=\"wrap\"\n    >\n      <Grid\n        item\n        xs={8}\n        sm={4}\n        md={4}\n        lg={2}\n        xl={2}\n        sx={{ border: \"2px solid red\" }}\n      >\n        <FilterSelect\n          {...{\n            ...commonConfig,\n            label: \"Category\",\n            options: data.options.categories,\n            defaultOptions: data.filters.category,\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={4}\n        sm={2}\n        md={2}\n        lg={1}\n        xl={1}\n        sx={{ border: \"2px solid red\" }}\n      >\n        <FilterSelect\n          {...{\n            ...commonConfig,\n            label: \"Gender\",\n            options: data.options.genders,\n            defaultOptions: data.filters.gender,\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={6}\n        md={6}\n        lg={3}\n        xl={3}\n        sx={{ border: \"2px solid red\" }}\n      >\n        <FilterSelect\n          {...{\n            ...commonConfig,\n            label: \"Country\",\n            options: data.options.countries,\n            defaultOptions: data.filters.country,\n          }}\n        />\n      </Grid>\n      <Grid\n        item\n        xs={12}\n        sm={10}\n        md={10}\n        lg={6}\n        xl={6}\n        sx={{ border: \"2px solid red\" }}\n      >\n        <FilterSlide\n          {...{\n            ...commonConfig,\n            range: data.filters.year,\n            min: data.options.years[0],\n            max: data.options.years[arrLenOfYear],\n          }}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default React.memo(MenuFilters);\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\n\nconst chartList = [\n  { value: \"WinnersByCountry\", text: \"Winners By Country\" },\n  { value: \"WinnersByCategory\", text: \"Winners By Category\" },\n  { value: \"WinnersByYear\", text: \"Winners By Year\" },\n  { value: \"WinnersByTable\", text: \"Winners By Table\" },\n];\n\nfunction MenuCharts({ selection, onSetSelection }) {\n  console.log(\"MenuCharts render\");\n  const handleSelection = (event, newSelection) => {\n    console.log(\"handleSelection newSelection:\", newSelection);\n    if (newSelection) onSetSelection(newSelection);\n  };\n\n  return (\n    <div\n      style={{ border: \"2px solid green\", textAlign: \"center\", marginTop: 10 }}\n    >\n      <ToggleButtonGroup\n        color=\"primary\"\n        value={selection}\n        exclusive\n        onChange={handleSelection}\n        sx={{\n          textTransform: \"none\",\n          justifyContent: \"center\",\n          flexWrap: \"wrap\",\n        }}\n      >\n        {chartList.map((item, index) => (\n          <ToggleButton\n            key={index}\n            value={item.value}\n            sx={{ textTransform: \"none\", fontSize: \"large\" }}\n          >\n            {item.text}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n}\n\nexport default React.memo(MenuCharts);\n","import * as React from \"react\";\nimport {\n  BarChart,\n  Cell,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  Bar,\n  ResponsiveContainer,\n  LabelList,\n} from \"recharts\";\n\nimport { getNumByCountry, COLOR_PALETTE } from \"../../dataUtil\";\n\nconst margins = {\n  top: 80,\n  right: 5,\n  bottom: 100,\n  left: 30,\n};\nconst minXTickGap = 50;\n\nexport const WinnersByCountry = ({\n  data,\n  xDataKey,\n  xDataType,\n  barDataKey,\n  barDataType,\n  beginYear,\n  endYear,\n}) => {\n  console.log(\"WinnersByCountry render\");\n  data = getNumByCountry(data);\n  console.log(\"WinnersByCountry barchartData:\", data);\n\n  const minWidth = data.length * minXTickGap;\n  console.log(\"WinnersByCountry minWidth:\", minWidth);\n  return (\n    <>\n      <ResponsiveContainer width={\"100%\"} minWidth={minWidth} height={600}>\n        <BarChart\n          data={data}\n          margin={margins}\n          style={{ /*overflow: \"auto\", */ border: \"2px solid red\" }}\n        >\n          <XAxis\n            dataKey={xDataKey}\n            tick={<CustomizedAxisTick data={data} />}\n            tickLine={false}\n            axisLine={false}\n            allowDataOverflow={false}\n            interval={0}\n            fontSize={20}\n          />\n          <YAxis hide={true} axisLine={false} tickLine={false} />\n          <Tooltip content={<CustomTooltip />} />\n          <Legend\n            align=\"center\"\n            verticalAlign=\"middle\"\n            height={36}\n            wrapperStyle={{ top: 5, paddingTop: 0, border: \"2px solid cyan\" }}\n          />\n          <Bar\n            name={`Nobel winners by country(${beginYear}~${endYear})`}\n            dataKey={barDataKey}\n            fill=\"green\"\n            style={{ border: \"2px solid yellow\" }}\n            wrapperStyle={{ border: \"2px solid yellow\" }}\n            interval={30}\n          >\n            <LabelList dataKey={barDataKey} position=\"top\" />\n            {data.map((entry, index) => (\n              <Cell\n                key={`cell-${index}`}\n                fill={COLOR_PALETTE[index % COLOR_PALETTE.length]}\n              />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </>\n  );\n};\n\nconst CustomizedAxisTick = (props) => {\n  const { x, y, payload, data, index } = props;\n  console.log(\"Render AxisTick props:\", props);\n  console.log(\"Payload value:\", data[payload.value - 1].country);\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text\n        x={0}\n        y={0}\n        dx={-5}\n        dy={0}\n        textAnchor=\"end\"\n        fill=\"#666\"\n        transform=\"rotate(-90)\"\n      >\n        {data[payload.value - 1].country}\n      </text>\n    </g>\n  );\n};\n\nconst CustomTooltip = ({ active, payload, label }) => {\n  //Don't display tooltip, but remaining the animation effect of bar selection\n  return null;\n};\n\nexport default React.memo(WinnersByCountry);\n","import * as React from \"react\";\nimport {\n  PieChart,\n  Pie,\n  Cell,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport {\n  getNumByCountry,\n  getRadioByCountry,\n  COLOR_PALETTE,\n} from \"../../dataUtil\";\n\nconst RADIAN = Math.PI / 180;\nconst margins = {\n  top: 30,\n  right: 5,\n  bottom: 100,\n  left: 5,\n};\n\nconst WinnersByRadio = ({ data, dataKey, beginYear, endYear }) => {\n  console.log(\"WinnersByRadio render\");\n  const filteredData = filterDataByRadio(data, 5);\n  console.log(\"filtered pie data:\", filteredData);\n  return (\n    <ResponsiveContainer\n      width={\"100%\"}\n      minWidth={240}\n      height={600}\n      minHeight={500}\n    >\n      <PieChart margin={margins} style={{ border: \"2px solid red\" }}>\n        <text x={120} y={30} fill=\"#666\" textAnchor=\"middle\">\n          Winners Percentage By Country\n          <tspan x={120} y={50}>\n            ({beginYear}~{endYear})\n          </tspan>\n        </text>\n        <Pie\n          data={filteredData}\n          dataKey={dataKey}\n          cx={120}\n          cy={150}\n          outerRadius={70}\n          fill=\"#8884d8\"\n          label={renderCustomizedLabel}\n        >\n          {filteredData.map((entry, index) => (\n            <Cell\n              key={`cell-${index}`}\n              fill={COLOR_PALETTE[index % COLOR_PALETTE.length]}\n            />\n          ))}\n        </Pie>\n        <Tooltip\n          contentStyle={{\n            backgroundColor: \"#f7efd2\",\n            borderRadius: 10,\n            paddingTop: 2,\n            paddingBottom: 2,\n            paddingLeft: 10,\n            paddingRight: 10,\n          }}\n          content={<CustomTooltip data={filteredData} />}\n          allowEscapeViewBox={{ x: false, y: false }}\n        />\n        <Legend content={<CustomLegend data={filteredData} />} />\n      </PieChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst renderCustomizedLabel = (props) => {\n  const {\n    x,\n    y,\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    percent,\n    index,\n  } = props;\n  console.log(\"Pie label:\", props);\n\n  return (\n    <text\n      x={x}\n      y={y}\n      fill=\"black\"\n      textAnchor={x > cx ? \"start\" : \"end\"}\n      dominantBaseline=\"central\"\n    >\n      {`${(percent * 100).toFixed(0)}%`}\n    </text>\n  );\n};\n\nconst CustomTooltip = (props) => {\n  const { data, active, payload, label, contentStyle } = props;\n  console.log(\"Pie tooltop:\", props);\n\n  if (active && payload && payload.length) {\n    const index = payload[0].name;\n    console.log(\"Pie index:\", index);\n    const { country, number, radio } = data[index];\n    return (\n      <div style={{ ...contentStyle }}>\n        <p>{`Percentage: ${radio.toFixed(0)}%`}</p>\n        <p>{`Number: ${number}`}</p>\n        <p>{`Country: ${country}`}</p>\n      </div>\n    );\n  }\n\n  return null;\n};\n\nconst CustomLegend = (props) => {\n  const { data, payload } = props;\n  console.log(\"xxx legend:\", props);\n  return (\n    <ul style={{ marginTop: 20 }}>\n      {payload.map((entry, index) => (\n        <li\n          key={`item-${index}`}\n          style={{ color: COLOR_PALETTE[index % COLOR_PALETTE.length] }}\n        >\n          {data[entry.value].country}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nconst filterDataByRadio = (data, minRadio) => {\n  data = getNumByCountry(data);\n  console.log(\"barchartData:\", data);\n  data = getRadioByCountry(data);\n\n  console.log(\"XXXXXX, RAW data:\", data);\n  let totalNum = data.reduce((acc, c) => acc + c.number, 0);\n  console.log(\"XXXXXX, RAW data total num:\", totalNum);\n  let filteredData = data.filter((d) => d.radio >= minRadio);\n  console.log(\"XXXXXX, filtered data:\", filteredData);\n  let othersRadio = 100 - filteredData.reduce((acc, c) => acc + c.radio, 0);\n  let totalFilteredNum = filteredData.reduce((acc, c) => acc + c.number, 0);\n  filteredData.push({\n    country: \"Others\",\n    countryId: filteredData.length + 1,\n    number: totalNum - totalFilteredNum,\n    radio: othersRadio,\n  });\n  return filteredData;\n};\n\nexport default React.memo(WinnersByRadio);\n","import React from \"react\";\nimport * as d3 from \"d3\";\nimport { COLOR_PALETTE } from \"../../dataUtil\";\nimport {\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer,\n  Scatter,\n  Cell,\n  ScatterChart,\n  Tooltip,\n  XAxis,\n  YAxis,\n  ZAxis,\n} from \"recharts\";\n\nconst mark = {\n  size: 10,\n  width: 10,\n  height: 15,\n};\n\nconst horizontalGap = 10;\nconst margins = {\n  top: 20,\n  right: 20,\n  bottom: 30,\n  left: 0,\n};\nconst horPaddings = { left: 10, right: 20 };\nconst vertPaddings = { top: 10, bottom: 10 };\n\nconst buildData = (data) => {\n  const sortedData = [...data].sort(\n    (a, b) =>\n      d3.ascending(a.year, b.year) || d3.ascending(a.category, b.category)\n  );\n  console.log(\"XXXXX dataPerYear1:\", sortedData);\n  console.log(\"XXXXX dataPerYear1:\", data);\n  const dataPerYear = d3.flatGroup(sortedData, (d) => d.year);\n\n  dataPerYear.forEach(([year, data]) => {\n    data.forEach((d, i) => {\n      d.index = i + 1;\n    });\n  });\n  console.log(\"XXXXX sorted category:\", data.categories.slice().sort());\n  sortedData.maxWinners = d3.max(dataPerYear, (d) => d[1].length);\n  sortedData.yearNum =\n    sortedData[sortedData.length - 1].year - sortedData[0].year + 1;\n  console.log(\"XXXXX dataPerYear2:\", dataPerYear);\n  console.log(\"XXXXX sorted data:\", sortedData);\n  return [sortedData, data.categories.slice().sort()];\n};\n\nconst WinnersByCategory = (props) => {\n  console.log(\"WinnersByCategory render!\");\n  const { data } = props;\n  const [dataPerYear, categories] = buildData(data);\n\n  const chartHeight =\n    mark.height * 1.2 * dataPerYear.maxWinners +\n    margins.top +\n    margins.bottom +\n    vertPaddings.top +\n    vertPaddings.bottom;\n\n  const xAxisWidth =\n    dataPerYear.yearNum * 20 +\n    horPaddings.left +\n    horPaddings.right +\n    margins.left +\n    margins.right;\n\n  console.log(\n    \"WinnersByCategory Chart height:\",\n    chartHeight,\n    \" xAxisWidth:\",\n    xAxisWidth\n  );\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: chartHeight + 20,\n        border: \"2px solid black\",\n        overflow: \"auto\",\n      }}\n    >\n      <ScatterChart\n        style={{ border: \"2px solid green\" }}\n        margin={margins}\n        width={xAxisWidth}\n        height={chartHeight}\n        minHeight={400}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          allowDuplicatedCategory={false}\n          dataKey={\"year\"}\n          type={\"number\"}\n          name={\"year\"}\n          domain={[\"dataMin\", \"dataMax\"]}\n          interval={0}\n          tickCount={dataPerYear.yearNum / 2 + 1}\n          angle={-90}\n          minTickGap={20}\n          tickMargin={25}\n          padding={horPaddings}\n          tick={{\n            textAnchor: \"middle\",\n            verticalAnchor: \"end\",\n            stroke: \"red\",\n            dx: -3,\n          }}\n          allowDataOverflow={true}\n        />\n        <YAxis\n          dataKey={\"index\"}\n          type={\"number\"}\n          name={\"WinnerCount\"}\n          interval={0}\n          tickCount={dataPerYear.maxWinners}\n          domain={[\"dataMin\", \"dataMax+2\"]}\n          padding={vertPaddings}\n        />\n        <ZAxis type=\"number\" range={[100, 100]} />\n        <Legend\n          layout=\"horizontal\"\n          align=\"left\"\n          verticalAlign=\"top\"\n          wrapperStyle={{\n            paddingLeft: 60,\n            paddingBottom: 10,\n            border: \"2px solid green\",\n            width: \"50%\",\n          }}\n        />\n        <Tooltip cursor={{ strokeDasharray: \"3 3\" }} />\n        {categories.map((category, index) => {\n          const categoryData = dataPerYear.filter(\n            (d) => d.category == category\n          );\n          console.log(\"fff category:\", categoryData);\n          return (\n            <Scatter\n              shape=\"circle\"\n              legendType=\"circle\"\n              name={category}\n              data={categoryData}\n              fill={COLOR_PALETTE[index % COLOR_PALETTE.length]}\n            >\n              {categoryData.map((entry, i) => (\n                <Cell\n                  key={`cell-${i}`}\n                  fill={COLOR_PALETTE[index % COLOR_PALETTE.length]}\n                />\n              ))}\n            </Scatter>\n          );\n        })}\n      </ScatterChart>\n    </div>\n  );\n};\n\nexport default React.memo(WinnersByCategory);\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { COLOR_PALETTE } from \"../../dataUtil\";\nimport {\n  ResponsiveContainer,\n  AreaChart,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Area,\n  Legend,\n} from \"recharts\";\nimport * as d3 from \"d3\";\n\nconst buildData = (data) => {\n  const countries = data.winnersByCountry.map((d) => d[0]);\n  console.log(\"XXXXX country:\", countries);\n  console.log(\"XXXXX data:\", data);\n  let sortedData = d3\n    .flatRollup(\n      [...data],\n      (v) => v.length,\n      (d) => d.year,\n      (d) => d.country\n    )\n    .sort((a, b) => d3.ascending(a[0], b[0]) || d3.ascending(a[1], b[1]));\n\n  sortedData = d3\n    .flatGroup(sortedData, (d) => d[0])\n    .map((d) => [d[0], d[1].map((d) => [d[1], d[2]])]);\n  console.log(\"XXXXX sortedData1:\", sortedData);\n\n  sortedData = sortedData.map((d) => {\n    const o = { year: d[0] };\n    countries.forEach((c) => {\n      const obj = Object.fromEntries(d[1]);\n      // console.log(\"XXXX: obj:\", obj);\n      obj.hasOwnProperty(c) ? (o[c] = obj[c]) : (o[c] = 0);\n    });\n    return o;\n  });\n  console.log(\"XXXXX sortedData2:\", sortedData);\n  sortedData.countries = countries;\n  sortedData.yearNum =\n    sortedData[sortedData.length - 1].year - sortedData[0].year + 1;\n  console.log(\"XXXXX sorted data:\", sortedData);\n  return sortedData;\n};\n\nconst WinnersByYear = ({ data }) => {\n  console.log(\"WinnersByYear render, data:\", data);\n  data = buildData(data);\n\n  const horizontalGap = 10;\n  const margins = {\n    top: 20,\n    right: 100,\n    bottom: 30,\n    left: 30,\n  };\n  const horPaddings = { left: 10, right: 20 };\n  const vertPaddings = { top: 10, bottom: 10 };\n\n  const chartHeight =\n    400 + margins.top + margins.bottom + vertPaddings.top + vertPaddings.bottom;\n\n  const xAxisWidth =\n    data.yearNum * 20 +\n    horPaddings.left +\n    horPaddings.right +\n    margins.left +\n    margins.right;\n\n  console.log(\"XXX Chart height:\", chartHeight);\n  console.log(\"XXX xAxisWidth:\", xAxisWidth);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: chartHeight + 20,\n        border: \"2px solid black\",\n        overflow: \"auto\",\n      }}\n    >\n      <AreaChart\n        data={data}\n        style={{ border: \"2px solid green\" }}\n        margin={margins}\n        width={xAxisWidth}\n        height={chartHeight}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis\n          allowDuplicatedCategory={false}\n          dataKey={\"year\"}\n          type={\"number\"}\n          name={\"year\"}\n          domain={[\"dataMin\", \"dataMax\"]}\n          interval={0}\n          tickCount={data.yearNum / 2 + 1}\n          angle={-90}\n          minTickGap={20}\n          tickMargin={25}\n          padding={horPaddings}\n          tick={{\n            textAnchor: \"middle\",\n            verticalAnchor: \"end\",\n            stroke: \"red\",\n            dx: -3,\n          }}\n          allowDataOverflow={true}\n        />\n        <YAxis />\n        <Tooltip\n          contentStyle={{\n            backgroundColor: \"#f7efd2\",\n            borderRadius: 10,\n            paddingTop: 2,\n            paddingBottom: 2,\n            paddingLeft: 10,\n            paddingRight: 10,\n          }}\n          content={<CustomTooltip />}\n          allowEscapeViewBox={{ x: false, y: false }}\n        />\n        <Legend\n          layout=\"horizontal\"\n          align=\"left\"\n          verticalAlign=\"top\"\n          iconType=\"rect\"\n          wrapperStyle={{\n            paddingLeft: 60,\n            paddingBottom: 10,\n            border: \"2px solid green\",\n            width: \"50%\",\n          }}\n        />\n        {data.countries.map((c, i) => (\n          <Area\n            key={i}\n            type=\"step\"\n            dataKey={c}\n            stackId=\"1\"\n            stroke={COLOR_PALETTE[i % COLOR_PALETTE.length]}\n            fill={COLOR_PALETTE[i % COLOR_PALETTE.length]}\n          />\n        ))}\n      </AreaChart>\n    </div>\n  );\n};\n\nconst CustomTooltip = (props) => {\n  const { active, payload, label, contentStyle } = props;\n  console.log(\"Area tooltop:\", props);\n\n  if (active && payload && payload.length) {\n    payload.filter((d) => d.value > 0);\n\n    return (\n      <div style={{ ...contentStyle }}>\n        <p>{`Year:${label}`}</p>\n        {payload\n          .sort((a, b) => b.value - a.value)\n          .filter((d) => d.value > 0)\n          .map((d, i) => {\n            return (\n              <p\n                key={i}\n                style={{ color: d.fill }}\n              >{`${d.dataKey}:${d.value}`}</p>\n            );\n          })}\n      </div>\n    );\n  }\n\n  return null;\n};\n\nexport default React.memo(WinnersByYear);\n","import * as React from \"react\";\nimport { DataGrid, GridToolbar } from \"@mui/x-data-grid\";\nimport { Button } from \"@mui/material\";\n\nfunction WinnersByTable({ data }) {\n  console.log(\"WinnersByTable render:\", data);\n  const rows = data.map((d, i) => {\n    d.id = i;\n    return d;\n  });\n  console.log(\"WinnersByTable:\", data[0]);\n  const columns = Object.entries(data[0]).map((d) => {\n    let o = { field: d[0], headerName: d[0], width: 150, fluid: 1 };\n    if (d[0] == \"id\") {\n      o.hide = true;\n    }\n    if (d[0] == \"link\") {\n      o.renderCell = (params) => {\n        console.log(\"YYYY:\", params);\n        return (\n          <div\n            style={{\n              overflow: \"auto\",\n              lineHeight: \"160%\",\n              padding: 0,\n            }}\n          >\n            <a href={params.value}>{params.row.name}</a>\n          </div>\n        );\n      };\n    } else {\n      o.renderCell = (params) => {\n        console.log(\"YYYYY:\", params);\n        return (\n          <div\n            style={{\n              overflow: \"auto\",\n              lineHeight: \"160%\",\n              padding: 0,\n            }}\n          >\n            {typeof params.value == \"object\" && params.value != null\n              ? params.value.toString()\n              : params.value}\n          </div>\n        );\n      };\n    }\n    return o;\n  });\n\n  return (\n    <div style={{ height: 480, width: \"100%\" }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        components={{\n          Toolbar: GridToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction areEqual(prevProps, nextProps) {\n  console.log(\"Render: is data changed:\", prevProps == nextProps);\n  return prevProps == nextProps;\n}\n\n// export default (() => {\n//   console.log(\"Test Memo\");\n//   return React.memo(WinnersByTable, areEqual);\n// })();\nexport default WinnersByTable;\n","import { Grid } from \"@mui/material\";\nimport { useMemo } from \"react\";\nimport WinnersByCountry from \"./Charts/WinnersByCountry\";\nimport WinnersByRadio from \"./Charts/WinnersByRadio\";\nimport WinnersByCategory from \"./Charts/WinnersByCategory\";\nimport WinnersByYear from \"./Charts/WinnersByYear\";\nimport WinnersByTable from \"./Charts/WinnersByTable\";\n\nconst buildScatter = (data) => {\n  console.log(\"build ScatterChart:\", data);\n  return (\n    <Grid item width={\"100%\"}>\n      <WinnersByCategory data={data} />\n    </Grid>\n  );\n};\n// sx={{ xs: 12, sm: 12, md: 12, lg: 4, xl: 4 }}\nconst buildBarchartAndPieChart = (data) => {\n  console.log(\"build barchart\");\n  return (\n    <>\n      <Grid\n        item\n        sx={{\n          width: { xs: \"100%\", sm: \"100%\", md: \"100%\", lg: \"75%\", xl: \"75%\" },\n          maxWidth: {\n            xs: \"100%\",\n            sm: \"100%\",\n            md: \"100%\",\n            lg: \"75%\",\n            xl: \"75%\",\n          },\n        }}\n      >\n        <WinnersByCountry\n          data={data}\n          xDataKey={\"countryId\"}\n          xDataType={\"number\"}\n          barDataKey={\"number\"}\n          barDataType={\"number\"}\n          beginYear={data.year[0]}\n          endYear={data.year[1]}\n        />\n      </Grid>\n      <Grid\n        item\n        sx={{\n          width: { xs: \"100%\", sm: \"100%\", md: \"100%\", lg: \"25%\", xl: \"25%\" },\n          maxWidth: {\n            xs: \"100%\",\n            sm: \"100%\",\n            md: \"100%\",\n            lg: \"25%\",\n            xl: \"25%\",\n          },\n        }}\n      >\n        <WinnersByRadio\n          data={data}\n          dataKey={\"radio\"}\n          beginYear={data.year[0]}\n          endYear={data.year[1]}\n        ></WinnersByRadio>\n      </Grid>\n    </>\n  );\n};\n\nconst buildAreaChart = (data) => {\n  console.log(\"build AreaChart\");\n  return (\n    <Grid item width={\"100%\"}>\n      <WinnersByYear data={data} />\n    </Grid>\n  );\n};\n\nconst buildTableChart = (data) => {\n  console.log(\"build buildTableChart\");\n  return (\n    <Grid item width={\"100%\"}>\n      <WinnersByTable data={data} />\n    </Grid>\n  );\n};\n\nexport const NobelCharts = ({ data, selectedChart }) => {\n  console.log(\"NobelCharts render:\", data);\n  const scatterData = useMemo(() => buildScatter(data), [data]);\n  const barchartData = useMemo(() => buildBarchartAndPieChart(data), [data]);\n  const areachartData = useMemo(() => buildAreaChart(data), [data]);\n  const tablechartData = useMemo(() => buildTableChart(data), [data]);\n\n  const buildNobelChart = () => {\n    const chartList = {\n      WinnersByCategory: scatterData,\n      WinnersByCountry: barchartData,\n      WinnersByYear: areachartData,\n      WinnersByTable: tablechartData,\n    };\n    return chartList[selectedChart];\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      columnSpacing={2}\n      rowSpacing={2}\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      wrap=\"wrap\"\n      marginTop={2}\n    >\n      {buildNobelChart()}\n    </Grid>\n  );\n};\n","import { useEffect, useState, useCallback } from \"react\";\r\nimport * as React from \"react\";\r\nimport { fetchData, ChartDataUtil } from \"../dataUtil\";\r\nimport * as d3 from \"d3\";\r\nimport MenuFilters from \"./MenuFilters\";\r\nimport MenuCharts from \"./MenuCharts\";\r\nimport { NobelCharts } from \"./NobelCharts\";\r\n\r\nconst _ = require(\"lodash\");\r\n// const dataURL =\r\n//   \"https://gist.githubusercontent.com/idatatalks/8612a9f89c444b82728473a545813789/raw/nobel_winners_cleaned.csv\";\r\n\r\nconst dataURL = \"nobel_winners_cleaned.csv\";\r\n\r\nexport const NobelApp = (props) => {\r\n  const [{ data, isDataLoaded }, setData] = useState({\r\n    data: null,\r\n    isDataLoaded: false,\r\n  });\r\n  const [chart, setChart] = useState(\"WinnersByCountry\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"Data fetch start\");\r\n    fetchData(dataURL)\r\n      .then((rawData) => {\r\n        console.log(\"Data parse start, rawData:\", rawData);\r\n        rawData = d3.csvParse(rawData, d3.autoType);\r\n        const data = new ChartDataUtil(rawData);\r\n        setData({ data, isDataLoaded: true });\r\n        console.log(\"Data parse end!\");\r\n      })\r\n      .catch((error) => console.log(\"Data fetch failed due to => \", error));\r\n    console.log(\"Data fetch end!\");\r\n  }, []);\r\n\r\n  const handleFilterChange = useCallback(\r\n    (filters) => {\r\n      setData({ data: _.clone(data.filterData(filters)), isDataLoaded: true });\r\n    },\r\n    [data]\r\n  );\r\n\r\n  const handleMenuCharts = useCallback((newChart) => {\r\n    console.log(\"Chart:\", newChart, \" is selected.\");\r\n    setChart(newChart);\r\n  }, []);\r\n\r\n  console.log(\"NobelApp rendering:\", data, \" active chart:\", chart);\r\n\r\n  if (!isDataLoaded) {\r\n    return <h1>Loading data...... please be patient or try again!</h1>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <MenuFilters data={data} onSetFilter={handleFilterChange} />\r\n      <MenuCharts selection={chart} onSetSelection={handleMenuCharts} />\r\n      <NobelCharts data={data.filteredData} selectedChart={chart} />\r\n    </>\r\n  );\r\n};\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { NobelApp } from \"./components/NobelApp\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <NobelApp />,\n\n  rootElement\n);\n"],"sourceRoot":""}